<$schema>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</$schema>
<name>SFZ</name>
<patterns>
  <include>#comment</include>
</patterns>
<patterns>
  <include>#headers</include>
</patterns>
<patterns>
  <include>#aria_curves</include>
</patterns>
<patterns>
  <include>#aria_effects</include>
</patterns>
<patterns>
  <include>#aria_instrument-settings</include>
</patterns>
<patterns>
  <include>#aria_modulation</include>
</patterns>
<patterns>
  <include>#aria_performance-parameters</include>
</patterns>
<patterns>
  <include>#aria_region-logic</include>
</patterns>
<patterns>
  <include>#aria_sound-source</include>
</patterns>
<patterns>
  <include>#cakewalk_effects</include>
</patterns>
<patterns>
  <include>#cakewalk_loading</include>
</patterns>
<patterns>
  <include>#cakewalk_modulation</include>
</patterns>
<patterns>
  <include>#cakewalk_performance-parameters</include>
</patterns>
<patterns>
  <include>#cakewalk_sound-source</include>
</patterns>
<patterns>
  <include>#cakewalk_wavetable-oscillator</include>
</patterns>
<patterns>
  <include>#linuxsampler_real-time-instrument-script</include>
</patterns>
<patterns>
  <include>#sfizz_instrument-settings</include>
</patterns>
<patterns>
  <include>#sfz1_effects</include>
</patterns>
<patterns>
  <include>#sfz1_instrument-settings</include>
</patterns>
<patterns>
  <include>#sfz1_modulation</include>
</patterns>
<patterns>
  <include>#sfz1_performance-parameters</include>
</patterns>
<patterns>
  <include>#sfz1_region-logic</include>
</patterns>
<patterns>
  <include>#sfz1_sound-source</include>
</patterns>
<patterns>
  <include>#sfz2_curves</include>
</patterns>
<patterns>
  <include>#sfz2_effects</include>
</patterns>
<patterns>
  <include>#sfz2_instrument-settings</include>
</patterns>
<patterns>
  <include>#sfz2_modulation</include>
</patterns>
<patterns>
  <include>#sfz2_performance-parameters</include>
</patterns>
<patterns>
  <include>#sfz2_region-logic</include>
</patterns>
<patterns>
  <include>#sfz2_sound-source</include>
</patterns>
<repository>
  <comment>
    <patterns>
      <name>comment.block.sfz</name>
      <begin>/\*</begin>
      <beginCaptures>
        <0>
          <name>punctuation.definition.comment.sfz</name>
        </0>
      </beginCaptures>
      <end>\*/</end>
      <endCaptures>
        <0>
          <name>punctuation.definition.comment.sfz</name>
        </0>
      </endCaptures>
    </patterns>
    <patterns>
      <name>comment.line.double-slash.sfz</name>
      <begin>([\s]+)?((//)(?:\s*(?=\s|$))?)</begin>
      <beginCaptures>
        <1>
          <name>punctuation.whitespace.comment.leading.sfz</name>
        </1>
        <2>
          <name>comment.line.double-slash.sfz</name>
        </2>
        <3>
          <name>punctuation.definition.comment.sfz</name>
        </3>
      </beginCaptures>
      <end>(?=$)</end>
    </patterns>
  </comment>
  <headers>
    <patterns>
      <comment>Headers</comment>
      <name>meta.structure.header.$2.start.sfz</name>
      <match>(&lt;)(control|curve|effect|global|group|master|midi|region|sample)(&gt;)</match>
      <captures>
        <1>
          <name>punctuation.definition.tag.begin.sfz</name>
        </1>
        <2>
          <name>keyword.control.$2.sfz</name>
        </2>
        <3>
          <name>punctuation.definition.tag.begin.sfz</name>
        </3>
      </captures>
    </patterns>
    <patterns>
      <comment>Non-compliant headers</comment>
      <name>invalid.sfz</name>
      <match>&lt;.*(?!(control|curve|effect|global|group|master|midi|region|sample))&gt;</match>
    </patterns>
  </headers>
  <sfz1_sound-source>
    <patterns>
      <comment>opcodes: (count): (0 to 4294967296)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(count)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_random): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (end): (0 to 4294967296 sample units)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(end)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_end): (0 to 4294967296 sample units)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_end)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_mode): (no_loop|one_shot|loop_continuous|loop_sustain</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_mode)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_loop_mode</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_start): (0 to 4294967296 sample units)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_start)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (offset): (0 to 4294967296 sample units)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (offset_random): (0 to 4294967296 sample units)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(offset_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-4294967296</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sample): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sample)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sync_beats): (0 to 32 beats)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sync_beats)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-32</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sync_offset): (0 to 32 beats)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sync_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-32</include>
      </patterns>
    </patterns>
  </sfz1_sound-source>
  <sfz1_instrument-settings>
    <patterns>
      <comment>opcodes: (group): (-2147483648 to 2147483647)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(group)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-2147483648-2147483647</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (off_by): (-2147483648 to 2147483647)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(off_by)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-2147483648-2147483647</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (off_mode): (fast|normal|time</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(off_mode)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_off_mode</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (output): (0 to 1024)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(output)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1024</include>
      </patterns>
    </patterns>
  </sfz1_instrument-settings>
  <sfz1_region-logic>
    <patterns>
      <comment>opcodes: (hibend): (-8192 to 8192)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hibend)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-8192-8192</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hibpm): (0 to 500 bpm)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hibpm)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-500</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hichan): (1 to 16)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hichan)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-16</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hichanaft): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hichanaft)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hikey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hikey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hipolyaft): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hipolyaft)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hirand): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hirand)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hivel): (1 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hivel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (key): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(key)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lobend): (-8192 to 8192)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lobend)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-8192-8192</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lobpm): (0 to 500 bpm)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lobpm)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-500</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lochan): (1 to 16)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lochan)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-16</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lochanaft): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lochanaft)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lokey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lokey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lopolyaft): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lopolyaft)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lorand): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lorand)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lovel): (1 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lovel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (on_hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(on_hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (on_loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(on_loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (seq_length): (1 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(seq_length)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (seq_position): (1 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(seq_position)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_down): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_down)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_hikey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_hikey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_last): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_last)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_lokey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_lokey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_previous): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_previous)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_up): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_up)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_vel): (current|previous</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_vel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_sw_vel</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (trigger): (attack|release|first|legato|release_key</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(trigger)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_trigger</include>
      </patterns>
    </patterns>
  </sfz1_region-logic>
  <sfz1_performance-parameters>
    <patterns>
      <comment>opcodes: (amp_keycenter): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_keycenter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amp_keytrack): (-96 to 12 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_keytrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-96-12</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amp_random): (0 to 24 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-24</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amp_velcurve_N): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_velcurve_N)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amp_veltrack): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_veltrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bend_down): (-9600 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_down)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-9600-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bend_step): (1 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_step)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bend_up): (-9600 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_up)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-9600-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (cutoff): (0 to SampleRate / 2 Hz)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(cutoff)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-SampleRate / 2</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eqN_bw): (0.001 to 4 octaves)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eqN_bw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0.001-4</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eqN_freq): (0 to 30000 Hz)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eqN_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-30000</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eqN_gain): (-96 to 24 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eqN_gain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-96-24</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_keycenter): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_keycenter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_keytrack): (0 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_keytrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_random): (0 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_type): (lpf_1p|hpf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p|bpf_1p|brf_1p|apf_1p|lpf_2p_sv|hpf_2p_sv|bpf_2p_sv|brf_2p_sv|pkf_2p|lpf_4p|hpf_4p|lpf_6p|hpf_6p|comb|pink|lsh|hsh|peq</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_fil_type</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_veltrack): (-9600 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_veltrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-9600-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitch_keycenter): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitch_keycenter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitch_keytrack): (-1200 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitch_keytrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-1200-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitch_random): (0 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitch_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitch_veltrack): (-9600 to 9600 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitch_veltrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-9600-9600</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (position): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(position)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (resonance): (0 to 40 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(resonance)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-40</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (rt_decay): (0 to 200 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(rt_decay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (transpose): (-127 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(transpose)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-127-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (tune): (-100 to 100 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(tune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (volume): (-144 to 6 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-144-6</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (width): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(width)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xf_cccurve): (gain|power</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xf_cccurve)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_xf_cccurve</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xf_keycurve): (gain|power</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xf_keycurve)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_xf_keycurve</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xf_velcurve): (gain|power</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xf_velcurve)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_xf_velcurve</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_hikey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_hikey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_hivel): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_hivel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_lokey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_lokey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfin_lovel): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfin_lovel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_hikey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_hikey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_hivel): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_hivel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_lokey): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_lokey)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (xfout_lovel): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(xfout_lovel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
  </sfz1_performance-parameters>
  <sfz1_modulation>
    <patterns>
      <comment>opcodes: (ampeg_attack): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_attack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_decay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_decay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_hold): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_hold)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_release): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_release)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_start): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_start)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_sustain): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_sustain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amplfo_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amplfo_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amplfo_depth): (-10 to 10 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amplfo_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-10-10</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amplfo_fade): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amplfo_fade)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (amplfo_freq): (0 to 20 Hz)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amplfo_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-20</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_attack): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_attack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_decay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_decay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_depth): (-12000 to 12000 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-12000-12000</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_hold): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_hold)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_release): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_release)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_start): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_start)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_sustain): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_sustain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fillfo_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fillfo_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fillfo_depth): (-1200 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fillfo_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-1200-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fillfo_fade): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fillfo_fade)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fillfo_freq): (0 to 20 Hz)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fillfo_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-20</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_attack): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_attack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_decay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_decay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_depth): (-12000 to 12000 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-12000-12000</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_hold): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_hold)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_release): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_release)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_start): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_start)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_sustain): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_sustain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitchlfo_delay): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitchlfo_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitchlfo_depth): (-1200 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitchlfo_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-1200-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitchlfo_fade): (0 to 100 seconds)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitchlfo_fade)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitchlfo_freq): (0 to 20 Hz)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitchlfo_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-20</include>
      </patterns>
    </patterns>
  </sfz1_modulation>
  <sfz1_effects>
    <patterns>
      <comment>opcodes: (effect1): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(effect1)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (effect2): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(effect2)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
  </sfz1_effects>
  <sfz2_directives>
  </sfz2_directives>
  <sfz2_sound-source>
    <patterns>
      <comment>opcodes: (delay_beats): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_beats)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_samples): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_samples)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (direction): (forward|reverse</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(direction)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_direction</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_count): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_count)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_crossfade): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_crossfade)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (loop_type): (forward|backward|alternate</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_loop_type</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (md5): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(md5)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (reverse_hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverse_hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverse_loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverse_loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (stop_beats): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(stop_beats)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (waveguide): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(waveguide)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_waveguide</include>
      </patterns>
    </patterns>
  </sfz2_sound-source>
  <sfz2_instrument-settings>
    <patterns>
      <comment>opcodes: (#define): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(#define)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (default_path): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(default_path)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (note_offset): (-127 to 127 semitones)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(note_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-127-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (note_polyphony): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(note_polyphony)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (note_selfmask): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(note_selfmask)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_note_selfmask</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (octave_offset): (-10 to 10 octaves)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(octave_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-10-10</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (polyphony): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(polyphony)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (rt_dead): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(rt_dead)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_rt_dead</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (set_ccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(set_ccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
  </sfz2_instrument-settings>
  <sfz2_region-logic>
    <patterns>
      <comment>opcodes: (hiprog): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hiprog)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (hitimer): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hitimer)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (loprog): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loprog)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lotimer): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lotimer)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sostenuto_sw): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sostenuto_sw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_sostenuto_sw</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (stop_hiccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(stop_hiccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (stop_loccN): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(stop_loccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sustain_sw): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sustain_sw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_sustain_sw</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_default): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_default)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
  </sfz2_region-logic>
  <sfz2_performance-parameters>
    <patterns>
      <comment>opcodes: (bend_smooth): (0 to undefined ms)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_smooth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-undefined</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bend_stepdown): (1 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_stepdown)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bend_stepup): (1 to 1200 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bend_stepup)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-1200</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eqN_type): (peak|lshelf|hshelf</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eqN_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_eqN_type</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan_keycenter): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan_keycenter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan_keytrack): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan_keytrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan_veltrack): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan_veltrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (phase): (normal|invert</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phase)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_phase</include>
      </patterns>
    </patterns>
  </sfz2_performance-parameters>
  <sfz2_modulation>
    <patterns>
      <comment>opcodes: (egN_amplitude)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_curveX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_curveX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_cutoff)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_cutoff)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_cutoff2)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_cutoff2)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_depth_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_depth_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_depthadd_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_depthadd_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_eqXbw)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_eqXbw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_eqXfreq)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_eqXfreq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_eqXgain)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_eqXgain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_freq_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_freq_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_levelX): (-1 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_levelX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-1-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_loop)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_loop)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_loop_count)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_loop_count)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_pan)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_pan)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_pan_curve)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_pan_curve)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_pitch)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_pitch)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_points)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_points)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_resonance)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_resonance)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_resonance2)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_resonance2)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_shapeX): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_shapeX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_sustain)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_sustain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_timeX): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_timeX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_volume)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_width)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_width)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_amplitude)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_count): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_count)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_cutoff)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_cutoff)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_delay): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_delay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_depth_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_depth_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_depthadd_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_depthadd_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_eqXbw)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_eqXbw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_eqXfreq)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_eqXfreq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_eqXgain)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_eqXgain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_fade): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_fade)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_freq): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_freq_lfoX)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_freq_lfoX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_pan)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_pan)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_phase): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_phase)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_pitch)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_pitch)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_resonance)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_resonance)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_smooth)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_smooth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_steps): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_steps)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_stepX): (-100 to 100 percent)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_stepX)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_volume)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_wave): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_wave)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_width)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_width)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </sfz2_modulation>
  <sfz2_curves>
    <patterns>
      <comment>opcodes: (vN): (-1 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(vN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.curves.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-1-1</include>
      </patterns>
    </patterns>
  </sfz2_curves>
  <aria_instrument-settings>
    <patterns>
      <comment>opcodes: (*_mod): (add|mult</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(*_mod)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_*_mod</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (#include): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(#include)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (global_label): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(global_label)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (group_label): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(group_label)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (hint_*)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hint_*)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (label_ccN): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(label_ccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (master_label): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(master_label)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (off_curve): (-2 to 10)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(off_curve)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-2-10</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (off_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(off_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (off_time): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(off_time)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (polyphony_stealing): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(polyphony_stealing)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (region_label): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(region_label)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (set_hdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(set_hdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_note_offset): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_note_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_octave_offset): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_octave_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </aria_instrument-settings>
  <aria_region-logic>
    <patterns>
      <comment>opcodes: (hihdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(hihdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lohdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lohdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (on_hihdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(on_hihdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (on_lohdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(on_lohdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sostenuto_cc): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sostenuto_cc)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sostenuto_lo): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sostenuto_lo)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (stop_hihdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(stop_hihdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (stop_lohdccN): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(stop_lohdccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sustain_cc): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sustain_cc)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sustain_lo): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sustain_lo)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_hilast): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_hilast)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_label): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_label)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sw_lolast): (0 to 127)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sw_lolast)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-127</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (varNN_*)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(varNN_*)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (varNN_mod): (mult|add</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(varNN_mod)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.region-logic.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_varNN_mod</include>
      </patterns>
    </patterns>
  </aria_region-logic>
  <aria_performance-parameters>
    <patterns>
      <comment>opcodes: (amp_veltrack_random)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amp_veltrack_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (amplitude): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eqN_dynamic): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eqN_dynamic)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fil_gain): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fil_gain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (global_amplitude): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(global_amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (global_tune): (-100 to 100 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(global_tune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (global_volume): (-144 to 6 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(global_volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-144-6</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (group_amplitude): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(group_amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (group_tune): (-100 to 100 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(group_tune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (group_volume): (-144 to 6 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(group_volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-144-6</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (master_amplitude): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(master_amplitude)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (master_tune): (-100 to 100 cents)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(master_tune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (master_volume): (-144 to 6 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(master_volume)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-144-6</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan_law): (mma|balance</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan_law)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_pan_law</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pan_random): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pan_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (position_keycenter)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(position_keycenter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (position_keytrack)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(position_keytrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (position_random): (-100 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(position_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-100-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (position_veltrack)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(position_veltrack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (resonance_random): (0 to 40 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(resonance_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-40</include>
      </patterns>
    </patterns>
  </aria_performance-parameters>
  <aria_modulation>
    <patterns>
      <comment>opcodes: (ampeg_attack_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_attack_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_decay_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_decay_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_decay_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_decay_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_dynamic): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_dynamic)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_release_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_release_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (ampeg_release_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(ampeg_release_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_ampeg)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_ampeg)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_attack_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_attack_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_decay_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_decay_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_decay_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_decay_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_dynamic): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_dynamic)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_release_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_release_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (fileg_release_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fileg_release_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_offset): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_ratio): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_ratio)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_scale): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_scale)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_attack_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_attack_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_decay_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_decay_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_decay_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_decay_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_dynamic): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_dynamic)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_release_shape): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_release_shape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (pitcheg_release_zero): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(pitcheg_release_zero)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
  </aria_modulation>
  <aria_curves>
    <patterns>
      <comment>opcodes: (curve_index): (0 to 255)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(curve_index)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.curves.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-255</include>
      </patterns>
    </patterns>
  </aria_curves>
  <aria_effects>
    <patterns>
      <comment>opcodes: (param_offset): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(param_offset)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (vendor_specific): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(vendor_specific)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </aria_effects>
  <float_neg30000-30000>
  </float_neg30000-30000>
  <float_neg144-48>
  </float_neg144-48>
  <float_neg144-6>
  </float_neg144-6>
  <float_neg200-200>
  </float_neg200-200>
  <float_neg100-100>
  </float_neg100-100>
  <float_neg96-12>
  </float_neg96-12>
  <float_neg96-24>
  </float_neg96-24>
  <float_neg20-20>
  </float_neg20-20>
  <float_neg10-10>
  </float_neg10-10>
  <float_neg4-4>
  </float_neg4-4>
  <float_neg1-1>
  </float_neg1-1>
  <float_0-1>
  </float_0-1>
  <float_0-4>
  </float_0-4>
  <float_0-20>
  </float_0-20>
  <float_0-24>
  </float_0-24>
  <float_0-32>
  </float_0-32>
  <float_0-40>
  </float_0-40>
  <float_0-100>
  </float_0-100>
  <float_0-200>
  </float_0-200>
  <float_0-500>
  </float_0-500>
  <float_0-30000>
  </float_0-30000>
  <float_positive>
  </float_positive>
  <float_any>
  </float_any>
  <int_neg12000-12000>
  </int_neg12000-12000>
  <int_neg9600-9600>
  </int_neg9600-9600>
  <int_neg8192-8192>
  </int_neg8192-8192>
  <int_neg1200-1200>
  </int_neg1200-1200>
  <int_neg100-100>
  </int_neg100-100>
  <int_neg10-10>
  </int_neg10-10>
  <int_neg1-127>
  </int_neg1-127>
  <int_neg127-127>
  </int_neg127-127>
  <int_0-127>
  </int_0-127>
  <int_0-127_or_string_note>
  </int_0-127_or_string_note>
  <int_0-1024>
  </int_0-1024>
  <int_0-1200>
  </int_0-1200>
  <int_0-9600>
  </int_0-9600>
  <int_1-16>
  </int_1-16>
  <int_1-100>
  </int_1-100>
  <int_1-1200>
  </int_1-1200>
  <int_positive>
  </int_positive>
  <int_positive_or_neg1>
  </int_positive_or_neg1>
  <int_any>
  </int_any>
  <string_add-mult>
  </string_add-mult>
  <string_attack-release-first-legato>
  </string_attack-release-first-legato>
  <string_balance-mma>
  </string_balance-mma>
  <string_current-previous>
  </string_current-previous>
  <string_fast-normal-time>
  </string_fast-normal-time>
  <string_forward-backward-alternate>
  </string_forward-backward-alternate>
  <string_forward-reverse>
  </string_forward-reverse>
  <string_gain-power>
  </string_gain-power>
  <string_loop_mode>
  </string_loop_mode>
  <string_lpf-hpf-bpf-brf>
  </string_lpf-hpf-bpf-brf>
  <string_md5>
  </string_md5>
  <string_normal-invert>
  </string_normal-invert>
  <string_on-off>
  </string_on-off>
  <string_note>
  </string_note>
  <string_any_continuous>
  </string_any_continuous>
  <linuxsampler_real-time-instrument-script>
    <patterns>
      <comment>opcodes: (script): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(script)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.real-time-instrument-script.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </linuxsampler_real-time-instrument-script>
  <aria_sound-source>
    <patterns>
      <comment>opcodes: (delay_beats_random): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_beats_random)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </aria_sound-source>
  <cakewalk_sound-source>
    <patterns>
      <comment>opcodes: (loop_tune): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(loop_tune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sample_fadeout): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sample_fadeout)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.sound-source.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </cakewalk_sound-source>
  <sfizz_instrument-settings>
    <patterns>
      <comment>opcodes: (label_keyN): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(label_keyN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.instrument-settings.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </sfizz_instrument-settings>
  <cakewalk_performance-parameters>
    <patterns>
      <comment>opcodes: (noise_filter): (on|off|lpf_1p|hpf_1p|bpf_1p|brf_1p|apf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p|pkf_2p|lpf_4p|hpf_4p|lpf_6p|hpf_6p|comb|pink</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(noise_filter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_noise_filter</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (noise_level): (-96 to 24 dB)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(noise_level)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-96-24</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (noise_step): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(noise_step)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (noise_stereo): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(noise_stereo)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_noise_stereo</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (noise_tone): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(noise_tone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.performance-parameters.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-100</include>
      </patterns>
    </patterns>
  </cakewalk_performance-parameters>
  <cakewalk_modulation>
    <patterns>
      <comment>opcodes: (egN_bitred)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_bitred)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_decim)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_decim)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_driveshape)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_driveshape)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_noiselevel)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_noiselevel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_noisestep)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_noisestep)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_noisetone)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_noisetone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_rectify)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_rectify)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (egN_ringmod)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(egN_ringmod)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_bitred)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_bitred)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_decim)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_decim)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_drive)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_drive)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_noiselevel)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_noiselevel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_noisestep)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_noisestep)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (lfoN_noisetone)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(lfoN_noisetone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.modulation.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </cakewalk_modulation>
  <cakewalk_effects>
    <patterns>
      <comment>opcodes: (apan_depth): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (apan_dry): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_dry)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (apan_freq): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (apan_phase): (0 to 180 °)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_phase)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-180</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (apan_waveform)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_waveform)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (apan_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(apan_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bitred): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bitred)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (bypass_onccN): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bypass_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_attack): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_attack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_gain)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_gain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_ratio): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_ratio)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_release): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_release)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_stlink): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_stlink)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_comp_stlink</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (comp_threshold): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(comp_threshold)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (decim): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(decim)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_cutoff): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_cutoff)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_damphi): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_damphi)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_damplo): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_damplo)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_dry): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_dry)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_feedback): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_feedback)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_filter): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_filter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_input): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_input)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_levelc): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_levelc)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_levell): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_levell)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_levelr): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_levelr)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_lfofreq): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_lfofreq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_moddepth): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_moddepth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_mode): (detune|chorus|cross|flanger|lrc|mod|multimod|panning|ping|rlc|stereo|tlcr</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_mode)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_delay_mode</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_panc): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_panc)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_panl): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_panl)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_panr): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_panr)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_resonance)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_resonance)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_spread): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_spread)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_syncc_onccN)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_syncc_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_syncl_onccN)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_syncl_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_syncr_onccN)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_syncr_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_time_tap)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_time_tap)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_timec)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_timec)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_timel)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_timel)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_timer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_timer)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (delay_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(delay_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (directtomain): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(directtomain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (disto_depth): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(disto_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (disto_dry): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(disto_dry)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (disto_stages)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(disto_stages)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (disto_tone): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(disto_tone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (disto_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(disto_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (dsp_order): (0 to 14)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(dsp_order)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-14</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (eq_bw)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eq_bw)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (eq_freq)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eq_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (eq_gain)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eq_gain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (eq_type)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(eq_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (filter_cutoff)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(filter_cutoff)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (filter_resonance)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(filter_resonance)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (filter_type): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(filter_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (fxNtomain): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fxNtomain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (fxNtomix): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(fxNtomix)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (gate_attack)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(gate_attack)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (gate_onccN)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(gate_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (gate_release)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(gate_release)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (gate_stlink): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(gate_stlink)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_gate_stlink</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (gate_threshold)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(gate_threshold)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (internal): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(internal)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_internal</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_depth): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_feedback): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_feedback)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_freq): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_freq)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_phase_onccN): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_phase_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_stages)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_stages)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_waveform)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_waveform)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (phaser_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(phaser_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_damp): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_damp)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_dry): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_dry)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_input): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_input)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_predelay): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_predelay)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_size): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_size)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_tone): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_tone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_type): (chamber|large_hall|large_room|mid_hall|mid_room|small_hall|small_room</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_reverb_type</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (reverb_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(reverb_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (static_cyclic_level): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_cyclic_level)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (static_cyclic_time): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_cyclic_time)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (static_filter): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_filter)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (static_level): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_level)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (static_random_level): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_random_level)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (static_random_maxtime): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_random_maxtime)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (static_random_mintime): (any float)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_random_mintime)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (static_stereo)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_stereo)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (static_tone): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(static_tone)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (strings_number)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(strings_number)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (strings_wet_onccN): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(strings_wet_onccN)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (tdfir_dry): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(tdfir_dry)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (tdfir_gain): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(tdfir_gain)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (tdfir_impulse)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(tdfir_impulse)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (tdfir_wet): (0 to 100)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(tdfir_wet)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#_0-100</include>
      </patterns>
    </patterns>
  </cakewalk_effects>
  <sfz2_effects>
    <patterns>
      <comment>opcodes: (bus): (main|aux1|aux2|aux3|aux4|aux5|aux6|aux7|aux8|fx1|fx2|fx3|fx4|midi</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(bus)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_bus</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (effect3): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(effect3)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (effect4): (0 to 100 %)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(effect4)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_0-100</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (type): (apan|comp|delay|disto|eq|filter|fverb|gate|limiter|lofi|mverb|phaser|static|strings|tdfir|com.mda.Limiter|com.mda.Overdrive|com.mda.Leslie|com.mda.RingMod|com.mda.Delay|com.mda.Bandisto|com.mda.Ambience|com.mda.DubDelay|com.mda.Detune|com.mda.Dither|com.mda.Combo|com.mda.Degrade|com.mda.SubSynth|com.mda.RezFilter</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(type)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.effects.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_type</include>
      </patterns>
    </patterns>
  </sfz2_effects>
  <cakewalk_loading>
    <patterns>
      <comment>opcodes: (image): (any string)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(image)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.loading.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (load_end): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(load_end)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.loading.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (load_mode): (0 to 1)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(load_mode)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.loading.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-1</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (load_start): (any integer)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(load_start)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.loading.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (sample_quality): (1 to 10)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(sample_quality)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.loading.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-10</include>
      </patterns>
    </patterns>
  </cakewalk_loading>
  <cakewalk_wavetable-oscillator>
    <patterns>
      <comment>opcodes: (oscillator): (on|off</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#string_oscillator</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_detune)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_detune)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_mod_depth)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_mod_depth)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_mode): (0 to 2)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_mode)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-2</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_multi): (1 to 9)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_multi)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_1-9</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_phase): (-1 to 360 °)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_phase)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#float_-1-360</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_quality): (0 to 3)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_quality)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
      <patterns>
        <include>#integer_0-3</include>
      </patterns>
    </patterns>
    <patterns>
      <comment>opcodes: (oscillator_table_size)</comment>
      <name>meta.opcode.sfz</name>
      <begin>\b(oscillator_table_size)\b</begin>
      <beginCaptures>
        <1>
          <name>variable.language.wavetable-oscillator.$1.sfz</name>
        </1>
      </beginCaptures>
      <end>\s|$</end>
    </patterns>
  </cakewalk_wavetable-oscillator>
</repository>
<scopeName>source.sfz</scopeName>