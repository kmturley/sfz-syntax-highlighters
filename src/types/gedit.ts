// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Gedit {
  _declaration: Declaration;
  _comment: string;
  language: Language;
}

export interface Declaration {
  _attributes: DeclarationAttributes;
}

export interface DeclarationAttributes {
  version: string;
  encoding: string;
}

export interface Language {
  _attributes: LanguageAttributes;
  metadata: Metadata;
  styles: Styles;
  definitions: Definitions;
}

export interface LanguageAttributes {
  id: string;
  name: string;
  version: string;
  _section: string;
}

export interface Definitions {
  'define-regex': DefineRegex[];
  context: DefinitionsContext[];
  _comment: string[];
}

export interface DefinitionsContext {
  _attributes: PurpleAttributes;
  match?: Match;
  prefix?: Prefix;
  suffix?: Prefix;
  keyword?: Prefix[];
  include?: Include;
}

export interface PurpleAttributes {
  id: string;
  'style-ref'?: string;
  class?: string;
  'sub-pattern'?: string;
}

export interface Include {
  context: PurpleContext[] | FluffyContext;
}

export interface PurpleContext {
  _attributes: FluffyAttributes;
}

export interface FluffyAttributes {
  ref: string;
  'style-ref'?: string;
}

export interface FluffyContext {
  _attributes: PurpleAttributes;
}

export interface Prefix {
  _text: string;
}

export interface Match {
  _attributes: MatchAttributes;
  _text: string;
}

export interface MatchAttributes {
  extended: string;
}

export interface DefineRegex {
  _attributes: DefineRegexAttributes;
  _text: string;
}

export interface DefineRegexAttributes {
  id: string;
}

export interface Metadata {
  property: Property[];
}

export interface Property {
  _attributes: PropertyAttributes;
  _text: string;
}

export interface PropertyAttributes {
  name: string;
}

export interface Styles {
  style: Style[];
}

export interface Style {
  _attributes: StyleAttributes;
}

export interface StyleAttributes {
  id: string;
  name: string;
  'map-to': string;
}
