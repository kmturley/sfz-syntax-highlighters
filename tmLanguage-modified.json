{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "SFZ",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#headers"
    },
    {
      "include": "#aria_curves"
    },
    {
      "include": "#aria_effects"
    },
    {
      "include": "#aria_instrument-settings"
    },
    {
      "include": "#aria_modulation"
    },
    {
      "include": "#aria_performance-parameters"
    },
    {
      "include": "#aria_region-logic"
    },
    {
      "include": "#aria_sound-source"
    },
    {
      "include": "#cakewalk_effects"
    },
    {
      "include": "#cakewalk_loading"
    },
    {
      "include": "#cakewalk_modulation"
    },
    {
      "include": "#cakewalk_performance-parameters"
    },
    {
      "include": "#cakewalk_sound-source"
    },
    {
      "include": "#cakewalk_wavetable-oscillator"
    },
    {
      "include": "#linuxsampler_real-time-instrument-script"
    },
    {
      "include": "#sfizz_instrument-settings"
    },
    {
      "include": "#sfz1_effects"
    },
    {
      "include": "#sfz1_instrument-settings"
    },
    {
      "include": "#sfz1_modulation"
    },
    {
      "include": "#sfz1_performance-parameters"
    },
    {
      "include": "#sfz1_region-logic"
    },
    {
      "include": "#sfz1_sound-source"
    },
    {
      "include": "#sfz2_curves"
    },
    {
      "include": "#sfz2_effects"
    },
    {
      "include": "#sfz2_instrument-settings"
    },
    {
      "include": "#sfz2_modulation"
    },
    {
      "include": "#sfz2_performance-parameters"
    },
    {
      "include": "#sfz2_region-logic"
    },
    {
      "include": "#sfz2_sound-source"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.block.sfz",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.sfz"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.sfz"
            }
          }
        },
        {
          "name": "comment.line.double-slash.sfz",
          "begin": "([\\s]+)?((//)(?:\\s*(?=\\s|$))?)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.sfz"
            },
            "2": {
              "name": "comment.line.double-slash.sfz"
            },
            "3": {
              "name": "punctuation.definition.comment.sfz"
            }
          },
          "end": "(?=$)"
        }
      ]
    },
    "headers": {
      "patterns": [
        {
          "comment": "Headers",
          "name": "meta.structure.header.$2.start.sfz",
          "match": "(<)(control|curve|effect|global|group|master|midi|region|sample)(>)",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.begin.sfz"
            },
            "2": {
              "name": "keyword.control.$2.sfz"
            },
            "3": {
              "name": "punctuation.definition.tag.begin.sfz"
            }
          }
        },
        {
          "comment": "Non-compliant headers",
          "name": "invalid.sfz",
          "match": "<.*(?!(control|curve|effect|global|group|master|midi|region|sample))>"
        }
      ]
    },
    "sfz1_sound-source": {
      "patterns": [
        {
          "comment": "opcodes: (count): (0 to 4294967296)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(count)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_random): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (end): (0 to 4294967296 sample units)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(end)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (loop_end): (0 to 4294967296 sample units)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_end)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (loop_mode): (no_loop|one_shot|loop_continuous|loop_sustain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_mode)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (loop_start): (0 to 4294967296 sample units)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_start)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (offset): (0 to 4294967296 sample units)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (offset_random): (0 to 4294967296 sample units)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(offset_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-4294967296"
            }
          ]
        },
        {
          "comment": "opcodes: (sample): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sample)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (sync_beats): (0 to 32 beats)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sync_beats)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-32"
            }
          ]
        },
        {
          "comment": "opcodes: (sync_offset): (0 to 32 beats)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sync_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-32"
            }
          ]
        }
      ]
    },
    "sfz1_instrument-settings": {
      "patterns": [
        {
          "comment": "opcodes: (group): (-2147483648 to 2147483647)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(group)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (off_by): (-2147483648 to 2147483647)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(off_by)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (off_mode): (fast|normal|time)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(off_mode)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (output): (0 to 1024)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(output)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1024"
            }
          ]
        }
      ]
    },
    "sfz1_region-logic": {
      "patterns": [
        {
          "comment": "opcodes: (hibend): (-8192 to 8192)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hibend)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-8192-8192"
            }
          ]
        },
        {
          "comment": "opcodes: (hibpm): (0 to 500 bpm)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hibpm)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-500"
            }
          ]
        },
        {
          "comment": "opcodes: (hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (hichan): (1 to 16)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hichan)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-16"
            }
          ]
        },
        {
          "comment": "opcodes: (hichanaft): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hichanaft)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (hikey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hikey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.key-mapping.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (hipolyaft): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hipolyaft)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (hirand): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hirand)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (hivel): (1 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hivel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.key-mapping.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-127"
            }
          ]
        },
        {
          "comment": "opcodes: (key): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(key)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.key-mapping.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lobend): (-8192 to 8192)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lobend)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-8192-8192"
            }
          ]
        },
        {
          "comment": "opcodes: (lobpm): (0 to 500 bpm)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lobpm)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-500"
            }
          ]
        },
        {
          "comment": "opcodes: (loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lochan): (1 to 16)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lochan)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-16"
            }
          ]
        },
        {
          "comment": "opcodes: (lochanaft): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lochanaft)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lokey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lokey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.key-mapping.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lopolyaft): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lopolyaft)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lorand): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lorand)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (lovel): (1 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lovel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.key-mapping.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-127"
            }
          ]
        },
        {
          "comment": "opcodes: (on_hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(on_hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (on_loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(on_locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (seq_length): (1 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(seq_length)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-100"
            }
          ]
        },
        {
          "comment": "opcodes: (seq_position): (1 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(seq_position)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-100"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_down): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_down)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_hikey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_hikey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_last): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_last)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_lokey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_lokey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_previous): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_previous)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_up): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_up)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_vel): (current|previous)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_vel)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (trigger): (attack|release|first|legato|release_key)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(trigger)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "sfz1_performance-parameters": {
      "patterns": [
        {
          "comment": "opcodes: (amp_keycenter): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_keycenter)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (amp_keytrack): (-96 to 12 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_keytrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-96-12"
            }
          ]
        },
        {
          "comment": "opcodes: (amp_random): (0 to 24 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-24"
            }
          ]
        },
        {
          "comment": "opcodes: (amp_velcurve_N): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_velcurve_(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (amp_veltrack): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_veltrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (bend_down): (-9600 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_down)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-9600-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (bend_step): (1 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_step)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (bend_up): (-9600 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_up)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-9600-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (cutoff): (0 to SampleRate / 2 Hz)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(cutoff)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-SampleRate / 2"
            }
          ]
        },
        {
          "comment": "opcodes: (eqN_bw): (0.001 to 4 octaves)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq(?:\\d{1,3})?_bw)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.eq.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0.001-4"
            }
          ]
        },
        {
          "comment": "opcodes: (eqN_freq): (0 to 30000 Hz)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq(?:\\d{1,3})?_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.eq.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-30000"
            }
          ]
        },
        {
          "comment": "opcodes: (eqN_gain): (-96 to 24 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq(?:\\d{1,3})?_gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.eq.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-96-24"
            }
          ]
        },
        {
          "comment": "opcodes: (fil_keycenter): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_keycenter)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (fil_keytrack): (0 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_keytrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (fil_random): (0 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (fil_type): (lpf_1p|hpf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p|bpf_1p|brf_1p|apf_1p|lpf_2p_sv|hpf_2p_sv|bpf_2p_sv|brf_2p_sv|pkf_2p|lpf_4p|hpf_4p|lpf_6p|hpf_6p|comb|pink|lsh|hsh|peq)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (fil_veltrack): (-9600 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_veltrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-9600-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (pan): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitch_keycenter): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitch_keycenter)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (pitch_keytrack): (-1200 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitch_keytrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-1200-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (pitch_random): (0 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitch_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (pitch_veltrack): (-9600 to 9600 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitch_veltrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-9600-9600"
            }
          ]
        },
        {
          "comment": "opcodes: (position): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(position)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (resonance): (0 to 40 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(resonance)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-40"
            }
          ]
        },
        {
          "comment": "opcodes: (rt_decay): (0 to 200 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(rt_decay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-200"
            }
          ]
        },
        {
          "comment": "opcodes: (transpose): (-127 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(transpose)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-127-127"
            }
          ]
        },
        {
          "comment": "opcodes: (tune): (-100 to 100 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(tune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (volume): (-144 to 6 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-144-6"
            }
          ]
        },
        {
          "comment": "opcodes: (width): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(width)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (xf_cccurve): (gain|power)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xf_cccurve)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (xf_keycurve): (gain|power)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xf_keycurve)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (xf_velcurve): (gain|power)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xf_velcurve)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (xfin_hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfin_hikey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_hikey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfin_hivel): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_hivel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfin_loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfin_lokey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_lokey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfin_lovel): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfin_lovel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_hikey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_hikey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_hivel): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_hivel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_lokey): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_lokey)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (xfout_lovel): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(xfout_lovel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        }
      ]
    },
    "sfz1_modulation": {
      "patterns": [
        {
          "comment": "opcodes: (ampeg_attack): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_attack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_decay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_decay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_hold): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_hold)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_release): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_release)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_start): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_start)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_sustain): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_sustain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (amplfo_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amplfo_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (amplfo_depth): (-10 to 10 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amplfo_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-10-10"
            }
          ]
        },
        {
          "comment": "opcodes: (amplfo_fade): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amplfo_fade)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (amplfo_freq): (0 to 20 Hz)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amplfo_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-20"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_attack): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_attack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_decay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_decay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_depth): (-12000 to 12000 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-12000-12000"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_hold): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_hold)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_release): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_release)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_start): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_start)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_sustain): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_sustain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fillfo_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fillfo_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fillfo_depth): (-1200 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fillfo_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-1200-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (fillfo_fade): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fillfo_fade)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fillfo_freq): (0 to 20 Hz)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fillfo_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-20"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_attack): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_attack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_decay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_decay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_depth): (-12000 to 12000 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-12000-12000"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_hold): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_hold)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_release): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_release)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_start): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_start)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_sustain): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_sustain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitchlfo_delay): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitchlfo_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitchlfo_depth): (-1200 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitchlfo_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-1200-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (pitchlfo_fade): (0 to 100 seconds)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitchlfo_fade)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pitchlfo_freq): (0 to 20 Hz)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitchlfo_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-20"
            }
          ]
        }
      ]
    },
    "sfz1_effects": {
      "patterns": [
        {
          "comment": "opcodes: (effect1): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(effect1)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (effect2): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(effect2)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        }
      ]
    },
    "sfz2_directives": {
      "patterns": []
    },
    "sfz2_sound-source": {
      "patterns": [
        {
          "comment": "opcodes: (delay_beats): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_beats)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (delay_samples): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_samples)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (direction): (forward|reverse)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(direction)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (loop_count): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_count)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (loop_crossfade): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_crossfade)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (loop_type): (forward|backward|alternate)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (md5): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(md5)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (reverse_hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverse_hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (reverse_loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverse_locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (stop_beats): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(stop_beats)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (waveguide): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(waveguide)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "sfz2_instrument-settings": {
      "patterns": [
        {
          "comment": "opcodes: (#define): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(#define)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (default_path): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(default_path)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (note_offset): (-127 to 127 semitones)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(note_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-127-127"
            }
          ]
        },
        {
          "comment": "opcodes: (note_polyphony): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(note_polyphony)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (note_selfmask): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(note_selfmask)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (octave_offset): (-10 to 10 octaves)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(octave_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-10-10"
            }
          ]
        },
        {
          "comment": "opcodes: (polyphony): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(polyphony)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (rt_dead): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(rt_dead)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (set_ccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(set_cc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        }
      ]
    },
    "sfz2_region-logic": {
      "patterns": [
        {
          "comment": "opcodes: (hiprog): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hiprog)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (hitimer): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hitimer)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (loprog): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loprog)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (lotimer): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lotimer)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.internal-conditions.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (sostenuto_sw): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sostenuto_sw)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (stop_hiccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(stop_hicc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (stop_loccN): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(stop_locc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sustain_sw): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sustain_sw)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (sw_default): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_default)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        }
      ]
    },
    "sfz2_performance-parameters": {
      "patterns": [
        {
          "comment": "opcodes: (bend_smooth): (0 to undefined ms)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_smooth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (bend_stepdown): (1 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_stepdown)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (bend_stepup): (1 to 1200 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bend_stepup)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_1-1200"
            }
          ]
        },
        {
          "comment": "opcodes: (eqN_type): (peak|lshelf|hshelf)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq(?:\\d{1,3})?_type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.eq.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (pan_keycenter): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan_keycenter)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (pan_keytrack): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan_keytrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (pan_veltrack): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan_veltrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (phase): (normal|invert)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phase)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "sfz2_modulation": {
      "patterns": [
        {
          "comment": "opcodes: (egN_amplitude)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_curveX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_curve(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_cutoff)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_cutoff)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_cutoff2)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_cutoff2)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_depth_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_depth_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_depthadd_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_depthadd_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_eqXbw)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_eq(?:\\d{1,3})?bw)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_eqXfreq)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_eq(?:\\d{1,3})?freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_eqXgain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_eq(?:\\d{1,3})?gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_freq_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_freq_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_levelX): (-1 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_level(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-1-1"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_loop)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_loop)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_loop_count)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_loop_count)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_pan)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_pan)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_pan_curve)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_pan_curve)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_pitch)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_pitch)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_points)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_points)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_resonance)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_resonance)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_resonance2)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_resonance2)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_shapeX): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_shape(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (egN_sustain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_sustain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_timeX): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_time(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (egN_volume)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_width)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_width)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_amplitude)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_count): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_count)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_cutoff)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_cutoff)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_delay): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_delay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (lfoN_depth_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_depth_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_depthadd_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_depthadd_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_eqXbw)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_eq(?:\\d{1,3})?bw)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_eqXfreq)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_eq(?:\\d{1,3})?freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_eqXgain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_eq(?:\\d{1,3})?gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_fade): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_fade)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (lfoN_freq): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (lfoN_freq_lfoX)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_freq_lfo(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_pan)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_pan)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_phase): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_phase)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_pitch)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_pitch)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_resonance)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_resonance)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_smooth)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_smooth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_steps): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_steps)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_stepX): (-100 to 100 percent)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_step(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_volume)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_wave): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_wave)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_width)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_width)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        }
      ]
    },
    "sfz2_curves": {
      "patterns": [
        {
          "comment": "opcodes: (vN): (-1 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(v(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.curves.curves.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-1-1"
            }
          ]
        }
      ]
    },
    "aria_instrument-settings": {
      "patterns": [
        {
          "comment": "opcodes: (*_mod): (add|mult)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(*_mod)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (#include): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(#include)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (global_label): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(global_label)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (group_label): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(group_label)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (hint_*)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hint_*)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (label_ccN): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(label_cc(?:\\d{1,3})?)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (master_label): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(master_label)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (off_curve): (-2|-1|0|1|2|10)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(off_curve)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (off_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(off_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (off_time): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(off_time)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (polyphony_stealing): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(polyphony_stealing)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.voice-lifecycle.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (region_label): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(region_label)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (set_hdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(set_hdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_note_offset): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_note_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_octave_offset): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_octave_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        }
      ]
    },
    "aria_region-logic": {
      "patterns": [
        {
          "comment": "opcodes: (hihdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(hihdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (lohdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lohdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (on_hihdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(on_hihdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (on_lohdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(on_lohdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (sostenuto_cc): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sostenuto_cc)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sostenuto_lo): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sostenuto_lo)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (stop_hihdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(stop_hihdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (stop_lohdccN): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(stop_lohdcc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.triggers.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (sustain_cc): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sustain_cc)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sustain_lo): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sustain_lo)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_hilast): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_hilast)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (sw_label): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_label)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (sw_lolast): (0 to 127)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sw_lolast)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-127"
            }
          ]
        },
        {
          "comment": "opcodes: (varNN_*)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(var(?:\\d{1,3})?_*)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (varNN_mod): (mult|add)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(var(?:\\d{1,3})?_mod)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.region-logic.midi-conditions.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "aria_performance-parameters": {
      "patterns": [
        {
          "comment": "opcodes: (amp_veltrack_random)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amp_veltrack_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (amplitude): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (eqN_dynamic): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq(?:\\d{1,3})?_dynamic)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.eq.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (fil_gain): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fil_gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (global_amplitude): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(global_amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (global_tune): (-100 to 100 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(global_tune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (global_volume): (-144 to 6 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(global_volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-144-6"
            }
          ]
        },
        {
          "comment": "opcodes: (group_amplitude): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(group_amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (group_tune): (-100 to 100 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(group_tune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (group_volume): (-144 to 6 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(group_volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-144-6"
            }
          ]
        },
        {
          "comment": "opcodes: (master_amplitude): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(master_amplitude)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (master_tune): (-100 to 100 cents)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(master_tune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.pitch.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (master_volume): (-144 to 6 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(master_volume)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-144-6"
            }
          ]
        },
        {
          "comment": "opcodes: (pan_law): (mma|balance)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan_law)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (pan_random): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pan_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (position_keycenter)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(position_keycenter)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (position_keytrack)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(position_keytrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (position_random): (-100 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(position_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-100-100"
            }
          ]
        },
        {
          "comment": "opcodes: (position_veltrack)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(position_veltrack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.amplifier.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (resonance_random): (0 to 40 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(resonance_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-40"
            }
          ]
        }
      ]
    },
    "aria_modulation": {
      "patterns": [
        {
          "comment": "opcodes: (ampeg_attack_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_attack_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (ampeg_decay_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_decay_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (ampeg_decay_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_decay_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_dynamic): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_dynamic)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (ampeg_release_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_release_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (ampeg_release_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(ampeg_release_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_ampeg)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_ampeg)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_attack_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_attack_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (fileg_decay_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_decay_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (fileg_decay_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_decay_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_dynamic): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_dynamic)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (fileg_release_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_release_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (fileg_release_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fileg_release_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_offset): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (lfoN_ratio): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_ratio)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (lfoN_scale): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_scale)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (pitcheg_attack_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_attack_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (pitcheg_decay_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_decay_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (pitcheg_decay_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_decay_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_dynamic): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_dynamic)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (pitcheg_release_shape): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_release_shape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (pitcheg_release_zero): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(pitcheg_release_zero)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        }
      ]
    },
    "aria_curves": {
      "patterns": [
        {
          "comment": "opcodes: (curve_index): (0 to 255)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(curve_index)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.curves.curves.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_positive"
            }
          ]
        }
      ]
    },
    "aria_effects": {
      "patterns": [
        {
          "comment": "opcodes: (param_offset): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(param_offset)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (vendor_specific): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(vendor_specific)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "float_-30000-30000": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)\\b(30000|([0-9]|[1-9][0-9]{1,3}|2[0-9]{4})(\\.\\d*)?)\\b)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)\\b(30000|([0-9]|[1-9][0-9]{1,3}|2[0-9]{4})(\\.\\d*)?)\\b)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-144-48": {
      "patterns": [
        {
          "match": "(=)(-(?<!\\.)(144|([1-9]|[1-8][0-9]|9[0-9]|1[0-4][0-3])(\\.\\d*)?)\\b|\\b(?<!\\.)(48|([0-9]|[1-3][0-9]|4[0-7])(\\.\\d*)?)\\b)",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!=(-(?<!\\.)(144|([1-9]|[1-8][0-9]|9[0-9]|1[0-4][0-3])(\\.\\d*)?)\\b|\\b(?<!\\.)(48|([0-9]|[1-3][0-9]|4[0-7])(\\.\\d*)?)\\b)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-144-6": {
      "patterns": [
        {
          "match": "(=)(-(?<!\\.)(144|([1-9]|[1-8][0-9]|9[0-9]|1[0-4][0-3])(\\.\\d*)?)\\b|\\b(?<!\\.)(6|([0-5](\\.\\d*)?)\\b))",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!=(-(?<!\\.)(144|([1-9]|[1-8][0-9]|9[0-9]|1[0-4][0-3])(\\.\\d*)?)\\b|\\b(?<!\\.)(6|([0-5](\\.\\d*)?)\\b))).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-200-200": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(200|([0-9]|[1-9][0-9]{1,2})(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(200|([0-9]|[1-9][0-9]{1,2})(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-100-100": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(100|([0-9]|[1-9][0-9])(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(100|([0-9]|[1-9][0-9])(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-96-12": {
      "patterns": [
        {
          "match": "(=)(-(?<!\\.)(96|([1-9]|[1-8][0-9]|9[0-5])(\\.\\d*)?)\\b|\\b(?<!\\.)(12|(([0-9]|1[01])(\\.\\d*)?)\\b))",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!=(-(?<!\\.)(96|([1-9]|[1-8][0-9]|9[0-5])(\\.\\d*)?)\\b|\\b(?<!\\.)(12|(([0-9]|1[01])(\\.\\d*)?)\\b))).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-96-24": {
      "patterns": [
        {
          "match": "(=)(-(?<!\\.)(96|([1-9]|[1-8][0-9]|9[0-5])(\\.\\d*)?)\\b|\\b(?<!\\.)(24|(([0-9]|1[0-9]|2[0-3])(\\.\\d*)?)\\b))",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!=(-(?<!\\.)(96|([1-9]|[1-8][0-9]|9[0-5])(\\.\\d*)?)\\b|\\b(?<!\\.)(24|(([0-9]|1[0-9]|2[0-3])(\\.\\d*)?)\\b))).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-20-20": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(20|(1?[0-9])(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(20|(1?[0-9])(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-10-10": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(10|([0-9])(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(10|([0-9])(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-4-4": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(4|([0-3])(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(4|([0-3])(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_-1-1": {
      "patterns": [
        {
          "match": "(=)((?:-?)(?<!\\.)(1|0(\\.\\d*)?))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)((?:-?)(?<!\\.)(1|0(\\.\\d*)?))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-1": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(1|(0)(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(1|(0)(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-4": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(4|([0-3])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(4|([0-3])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-20": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(20|([0-9]|1[0-9])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(24|([0-9]|1[0-9])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-24": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(24|([0-9]|1[0-9]|2[0-3])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(24|([0-9]|1[0-9]|2[0-3])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-32": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(32|([0-9]|1[0-9]|2[0-9]|3[0-1])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(32|([0-9]|1[0-9]|2[0-9]|3[0-1])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-40": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(40|([0-9]|[1-3][0-9])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(40|([0-9]|[1-3][0-9])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-100": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(100|([0-9]|[1-9][0-9])(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(100|([0-9]|[1-9][0-9])(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-200": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(200|([0-9]|[1-9][0-9]|1[0-9]{2})(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(200|([0-9]|[1-9][0-9]|1[0-9]{2})(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-500": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)(500|([0-9]|[1-8][0-9]|9[0-9]|[1-4][0-9]{2})(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)(500|([0-9]|[1-8][0-9]|9[0-9]|[1-4][0-9]{2})(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_0-30000": {
      "patterns": [
        {
          "match": "(=)(?<!\\.)\\b(30000|([0-9]|[1-9][0-9]{1,3}|2[0-9]{4})(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(?<!\\.)\\b(30000|([0-9]|[1-9][0-9]{1,3}|2[0-9]{4})(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_positive": {
      "patterns": [
        {
          "match": "(=)(\\d+(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(\\d+(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "float_any": {
      "patterns": [
        {
          "match": "(=)(-?\\b\\d+(\\.\\d*)?)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.float.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b\\d+(\\.\\d*)?)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-12000-12000": {
      "patterns": [
        {
          "match": "(=)(-?\\b(12000|[0-9]|[1-9][0-9]{1,3}|1[01][0-9]{3}))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b(12000|[0-9]|[1-9][0-9]{1,3}|1[01][0-9]{3}))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-9600-9600": {
      "patterns": [
        {
          "match": "(=)(-?([0-9]|[1-9][0-9]{1,2}|[1-8][0-9]{3}|9[0-5][0-9]{2}|9600))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?([0-9]|[1-9][0-9]{1,2}|[1-8][0-9]{3}|9[0-5][0-9]{2}|9600))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-8192-8192": {
      "patterns": [
        {
          "match": "(=)(-?([0-9]|[1-9][0-9]|[1-9][0-9]{2}|[1-7][0-9]{3}|80[0-9]{2}|81[0-8][0-9]|819[0-2]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?([0-9]|[1-9][0-9]|[1-9][0-9]{2}|[1-7][0-9]{3}|80[0-9]{2}|81[0-8][0-9]|819[0-2]))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-1200-1200": {
      "patterns": [
        {
          "match": "(=)(-?\\b(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9]{2}))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9]{2}))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-100-100": {
      "patterns": [
        {
          "match": "(=)(-?\\b(100|[0-9]|[1-9][0-9]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b(100|[0-9]|[1-9][0-9]))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-10-10": {
      "patterns": [
        {
          "match": "(=)(-?\\b(10|[0-9]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b(10|[0-9]))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-1-127": {
      "patterns": [
        {
          "match": "(=)(-1|[0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-1|[0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_-127-127": {
      "patterns": [
        {
          "match": "(=)(-?\\b([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(-?\\b([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7]))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-1": {
      "patterns": [
        {
          "match": "(=)(0|1)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(0|1)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-3": {
      "patterns": [
        {
          "match": "(=)([0-3])\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)([0-3])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-100": {
      "patterns": [
        {
          "match": "(=)([0-9]|[1-9][0-9]|100)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)([0-9]|[1-9][0-9]|100)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-127": {
      "patterns": [
        {
          "match": "(=)([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-127_or_string_note": {
      "patterns": [
        {
          "match": "(=)(([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])|[cdefgabCDEFGAB]\\#?(-1|[0-9]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(([0-9]|[1-8][0-9]|9[0-9]|1[01][0-9]|12[0-7])|[cdefgabCDEFGAB]\\#?(-1|[0-9]))\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-1024": {
      "patterns": [
        {
          "match": "(=)([0-9]|[1-9][0-9]|[1-9][0-9]{2}|10[01][0-9]|102[0-4])\\b",
          "name": "constant.numeric.integer.sfz"
        },
        {
          "match": "(?!(=)([0-9]|[1-9][0-9]|[1-9][0-9]{2}|10[01][0-9]|102[0-4])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-1200": {
      "patterns": [
        {
          "match": "(=)(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9{2}])\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9]{2}])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-9600": {
      "patterns": [
        {
          "match": "(=)([0-9]|[1-9][0-9]{1,2}|[1-8][0-9]{3}|9[0-5][0-9]{2}|9600)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)([0-9]|[1-9][0-9]{1,2}|[1-8][0-9]{3}|9[0-5][0-9]{2}|9600)\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_0-4294967296": {
      "patterns": [
        {
          "match": "(=)[0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-6]\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "(?!(=)[0-9]|[1-9][0-9]{1,8}|[1-3][0-9]{9}|4[01][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[01][0-9]{2}|42949672[0-8][0-9]|429496729[0-6]\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_1-16": {
      "patterns": [
        {
          "match": "(=)([1-9]|1[0-6])\\b",
          "name": "constant.numeric.integer.sfz"
        },
        {
          "match": "(?!(=)([1-9]|1[0-6])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_1-100": {
      "patterns": [
        {
          "match": "(=)(100|[1-9]|[1-9][0-9])\\b",
          "name": "constant.numeric.integer.sfz"
        },
        {
          "match": "(?!(=)(100|[1-9]|[1-9][0-9])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_1-127": {
      "patterns": [
        {
          "match": "(=)([1-9]|[1-9][0-9]|1[01][0-9]|12[0-7])\\b",
          "name": "constant.numeric.integer.sfz"
        },
        {
          "match": "(?!(=)([1-9]|[1-9][0-9]|1[01][0-9]|12[0-7])\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_1-1200": {
      "patterns": [
        {
          "match": "(=)(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9]{2})\\b",
          "name": "constant.numeric.integer.sfz"
        },
        {
          "match": "(?!(=)(1200|[0-9]|[1-9][0-9]{1,2}|1[01][0-9]{2})\\b)[^\\s]*",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_positive": {
      "patterns": [
        {
          "match": "(=)(\\d+)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "((?!(\\d+)).)*$",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_positive_or_-1": {
      "patterns": [
        {
          "match": "(=)(-1|\\d+)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "((?!(-1|\\d+)\\b).)*$",
          "name": "invalid.sfz"
        }
      ]
    },
    "integer_any": {
      "patterns": [
        {
          "match": "(=)(-?\\b\\d+)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "constant.numeric.integer.sfz"
            }
          }
        },
        {
          "match": "((?!(-?\\b\\d+)).)*$",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_add-mult": {
      "patterns": [
        {
          "match": "(=)(add|mult)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(add|mult)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_attack-release-first-legato": {
      "patterns": [
        {
          "match": "(=)(attack|release|first|legato)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(attack|release|first|legato)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_balance-mma": {
      "patterns": [
        {
          "match": "(=)(balance|mma)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(balance|mma)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_current-previous": {
      "patterns": [
        {
          "match": "(=)(current|previous)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(current|previous)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_fast-normal-time": {
      "patterns": [
        {
          "match": "(=)(fast|normal|time)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(fast|normal|time)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_forward-backward-alternate": {
      "patterns": [
        {
          "match": "(=)(forward|backward|alternate)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(forward|backward|alternate)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_forward-reverse": {
      "patterns": [
        {
          "match": "(=)(forward|reverse)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(forward|reverse)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_gain-power": {
      "patterns": [
        {
          "match": "(=)(gain|power)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(gain|power)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_loop_mode": {
      "patterns": [
        {
          "match": "(=)(no_loop|one_shot|loop_continuous|loop_sustain)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(no_loop|one_shot|loop_continuous|loop_sustain)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_lpf-hpf-bpf-brf": {
      "patterns": [
        {
          "match": "(=)(lpf_1p|hpf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(lpf_1p|hpf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_md5": {
      "patterns": [
        {
          "match": "(=)([abcdef0-9]{32})\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=([abcdef0-9]{32})).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_normal-invert": {
      "patterns": [
        {
          "match": "(=)(normal|invert)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(normal|invert)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_on-off": {
      "patterns": [
        {
          "match": "(=)(true|false|on|off|0|1)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.unquoted.sfz"
            }
          }
        },
        {
          "match": "(?!=(true|false|on|off|0|1)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_note": {
      "patterns": [
        {
          "match": "(=)([cdefgabCDEFGAB]\\#?(-1|[0-9]))\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.note.sfz"
            }
          }
        },
        {
          "match": "(?!=([cdefgabCDEFGAB]\\#?(-1|[0-9]))).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "string_any_continuous": {
      "patterns": [
        {
          "match": "(=)([^\\s]+)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.assignment.sfz"
            },
            "2": {
              "name": "string.note.sfz"
            }
          }
        },
        {
          "match": "(?!=([^\\s]+)).*",
          "name": "invalid.sfz"
        }
      ]
    },
    "linuxsampler_real-time-instrument-script": {
      "patterns": [
        {
          "comment": "opcodes: (script): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(script)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.real-time-instrument-script.real-time-instrument-script.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "aria_sound-source": {
      "patterns": [
        {
          "comment": "opcodes: (delay_beats_random): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_beats_random)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        }
      ]
    },
    "cakewalk_sound-source": {
      "patterns": [
        {
          "comment": "opcodes: (loop_tune): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(loop_tune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (sample_fadeout): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sample_fadeout)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.sound-source.sample-playback.$1.sfz"
            }
          },
          "end": "\\s|$"
        }
      ]
    },
    "sfizz_instrument-settings": {
      "patterns": [
        {
          "comment": "opcodes: (label_keyN): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(label_key(?:\\d{1,3})?)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.instrument-settings.instrument-settings.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "cakewalk_performance-parameters": {
      "patterns": [
        {
          "comment": "opcodes: (noise_filter): (on|off|lpf_1p|hpf_1p|bpf_1p|brf_1p|apf_1p|lpf_2p|hpf_2p|bpf_2p|brf_2p|pkf_2p|lpf_4p|hpf_4p|lpf_6p|hpf_6p|comb|pink)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(noise_filter)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (noise_level): (-96 to 24 dB)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(noise_level)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-96-24"
            }
          ]
        },
        {
          "comment": "opcodes: (noise_step): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(noise_step)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (noise_stereo): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(noise_stereo)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (noise_tone): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(noise_tone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.performance-parameters.filter.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        }
      ]
    },
    "cakewalk_modulation": {
      "patterns": [
        {
          "comment": "opcodes: (egN_bitred)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_bitred)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_decim)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_decim)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_driveshape)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_driveshape)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_noiselevel)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_noiselevel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_noisestep)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_noisestep)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_noisetone)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_noisetone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_rectify)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_rectify)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (egN_ringmod)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eg(?:\\d{1,3})?_ringmod)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.envelope-generators.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_bitred)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_bitred)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_decim)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_decim)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_drive)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_drive)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_noiselevel)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_noiselevel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_noisestep)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_noisestep)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (lfoN_noisetone)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(lfo(?:\\d{1,3})?_noisetone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.modulation.lfo.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        }
      ]
    },
    "cakewalk_effects": {
      "patterns": [
        {
          "comment": "opcodes: (apan_depth): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (apan_dry): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_dry)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (apan_freq): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (apan_phase): (0 to 180 °)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_phase)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-180"
            }
          ]
        },
        {
          "comment": "opcodes: (apan_waveform)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_waveform)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (apan_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(apan_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (bitred): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bitred)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (bypass_onccN): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bypass_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (comp_attack): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_attack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (comp_gain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (comp_ratio): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_ratio)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (comp_release): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_release)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (comp_stlink): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_stlink)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (comp_threshold): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(comp_threshold)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (decim): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(decim)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_cutoff): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_cutoff)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (delay_damphi): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_damphi)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_damplo): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_damplo)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_dry): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_dry)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_feedback): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_feedback)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_filter): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_filter)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (delay_input): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_input)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_levelc): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_levelc)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_levell): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_levell)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_levelr): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_levelr)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_lfofreq): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_lfofreq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (delay_moddepth): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_moddepth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_mode): (detune|chorus|cross|flanger|lrc|mod|multimod|panning|ping|rlc|stereo|tlcr)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_mode)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (delay_panc): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_panc)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_panl): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_panl)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_panr): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_panr)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_resonance)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_resonance)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_spread): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_spread)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_syncc_onccN)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_syncc_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_syncl_onccN)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_syncl_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_syncr_onccN)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_syncr_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_time_tap)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_time_tap)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_timec)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_timec)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_timel)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_timel)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_timer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_timer)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (delay_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(delay_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (directtomain): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(directtomain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (disto_depth): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(disto_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (disto_dry): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(disto_dry)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (disto_stages)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(disto_stages)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (disto_tone): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(disto_tone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (disto_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(disto_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (dsp_order): (0 to 14)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(dsp_order)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_positive"
            }
          ]
        },
        {
          "comment": "opcodes: (eq_bw)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq_bw)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (eq_freq)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (eq_gain)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq_gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (eq_type)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(eq_type)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (filter_cutoff)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(filter_cutoff)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (filter_resonance)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(filter_resonance)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (filter_type): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(filter_type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (fxNtomain): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fx(?:\\d{1,3})?tomain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (fxNtomix): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(fx(?:\\d{1,3})?tomix)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (gate_attack)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(gate_attack)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (gate_onccN)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(gate_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (gate_release)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(gate_release)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (gate_stlink): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(gate_stlink)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (gate_threshold)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(gate_threshold)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (internal): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(internal)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (phaser_depth): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (phaser_feedback): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_feedback)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (phaser_freq): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_freq)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (phaser_phase_onccN): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_phase_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (phaser_stages)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_stages)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (phaser_waveform)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_waveform)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (phaser_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(phaser_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_damp): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_damp)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_dry): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_dry)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_input): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_input)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_predelay): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_predelay)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (reverb_size): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_size)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_tone): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_tone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (reverb_type): (chamber|large_hall|large_room|mid_hall|mid_room|small_hall|small_room)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (reverb_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(reverb_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (static_cyclic_level): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_cyclic_level)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (static_cyclic_time): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_cyclic_time)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (static_filter): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_filter)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (static_level): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_level)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (static_random_level): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_random_level)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (static_random_maxtime): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_random_maxtime)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (static_random_mintime): (any float)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_random_mintime)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$"
        },
        {
          "comment": "opcodes: (static_stereo)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_stereo)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (static_tone): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(static_tone)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (strings_number)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(strings_number)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (strings_wet_onccN): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(strings_wet_oncc(?:\\d{1,3})?)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (tdfir_dry): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(tdfir_dry)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (tdfir_gain): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(tdfir_gain)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (tdfir_impulse)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(tdfir_impulse)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (tdfir_wet): (0 to 100)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(tdfir_wet)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-100"
            }
          ]
        }
      ]
    },
    "sfz2_effects": {
      "patterns": [
        {
          "comment": "opcodes: (bus): (main|aux1|aux2|aux3|aux4|aux5|aux6|aux7|aux8|fx1|fx2|fx3|fx4|midi)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(bus)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (effect3): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(effect3)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (effect4): (0 to 100 %)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(effect4)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_0-100"
            }
          ]
        },
        {
          "comment": "opcodes: (type): (apan|comp|delay|disto|eq|filter|fverb|gate|limiter|lofi|mverb|phaser|static|strings|tdfir|com.mda.Limiter|com.mda.Overdrive|com.mda.Leslie|com.mda.RingMod|com.mda.Delay|com.mda.Bandisto|com.mda.Ambience|com.mda.DubDelay|com.mda.Detune|com.mda.Dither|com.mda.Combo|com.mda.Degrade|com.mda.SubSynth|com.mda.RezFilter)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(type)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.effects.effects.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        }
      ]
    },
    "cakewalk_loading": {
      "patterns": [
        {
          "comment": "opcodes: (image): (any string)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(image)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.loading.loading.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (load_end): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(load_end)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.loading.loading.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (load_mode): (0 to 1)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(load_mode)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.loading.loading.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-1"
            }
          ]
        },
        {
          "comment": "opcodes: (load_start): (any integer)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(load_start)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.loading.loading.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (sample_quality): (1 to 10)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(sample_quality)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.loading.loading.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_positive"
            }
          ]
        }
      ]
    },
    "cakewalk_wavetable-oscillator": {
      "patterns": [
        {
          "comment": "opcodes: (oscillator): (on|off)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator)(=?)",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            },
            "2": {
              "name": "keyword.operator.assignment.sfz"
            }
          },
          "end": "(?=(\\s//|$))",
          "contentName": "string.unquoted.sfz"
        },
        {
          "comment": "opcodes: (oscillator_detune)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_detune)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_mod_depth)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_mod_depth)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_mode): (0 to 2)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_mode)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_positive"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_multi): (1 to 9)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_multi)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_positive"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_phase): (-1 to 360 °)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_phase)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#float_-1-360"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_quality): (0 to 3)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_quality)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_0-3"
            }
          ]
        },
        {
          "comment": "opcodes: (oscillator_table_size)",
          "name": "meta.opcode.sfz",
          "begin": "\\b(oscillator_table_size)\\b",
          "beginCaptures": {
            "1": {
              "name": "variable.language.wavetable-oscillator.wavetable-oscillator.$1.sfz"
            }
          },
          "end": "\\s|$",
          "patterns": [
            {
              "include": "#integer_any"
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.sfz"
}